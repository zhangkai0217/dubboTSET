server:
  port: 8082
dubbo:
  application:
    name: dubbo-provider
  registry:     #注册中心配置，用于配置连接注册中心相关信息
    address: zookeeper://127.0.0.1:2181
  protocol:     #协议配置，用于配置提供服务的协议信息，协议由提供方指定，消费方被动接受
    name: dubbo
    port: 20880
  scan:         #扫描包
    base-packages: com.zk.dubboTest

spring:

#datasource
#  devtools:
#      remote:
#        restart:
#          enabled: false

#data source1
#  datasource:
#    test1:
#      driverClassName: com.mysql.jdbc.Driver
#      url: jdbc:mysql://127.0.0.1:3306/test1
#      username: root
#      password: 123456
#  datasource:
#    test2:
#      driverClassName: com.mysql.jdbc.Driver
#      url: jdbc:mysql://127.0.0.1:3306/test2
#      username: root
#      password: 123456

  kafka:
    bootstrap-servers: 127.0.0.1:9092

    producer:
      retries: 0
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        linger.ms: 1

    consumer:
      enable-auto-commit: false
      auto-commit-interval: 100ms
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        session.timeout.ms: 15000

  redis: #redis配置开始
      timeout: 3000     # 连接超时时间
      database: 0
      host: localhost     # Redis服务器地址
      port: 6379 # Redis服务器连接端口
      password:  # Redis服务器连接密码（默认为空）
      jedis:
        pool:
          max-active: 1024 # 连接池最大连接数（使用负值表示没有限制）
          max-wait:  -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 200 # 连接池中的最大空闲连接
          min-idle: 0 # 连接池中的最小空闲连接
      block-when-exhausted: true #redis配置结束

kafka:
  topic:
    group-id: zk_kafka
    topic-name: zk
#
#mybatis:
#  config-locations: classpath:mybatis/mybatis-config.xml


